Nomes claros pra q qualquer junior ou superior entenda...
	mesmo assim acredito q `addr` não deixa muito claro se me refiro a um endereço de memória ou um endereço físico.

Antigamente se tinham monitores q suportavam 80 colunas e 25 linhas...
	mas hoje em dia temos monitores com uma resolução enorme e mais detalhados... PORÉM suas função DEVEM TER 80 COLUNAS E 20 LINHAS...
	OK, essa regra só é estúpida, se eu consigo visualizar 32 linhas num vscode ou vim da vida, ENTÃO MINHAS FUNÇÕES VÃO TER MAIS Q 20 LINHAS, já sobre as colunas isso é útil caso divida a tela com o navegador.
	
Funções devem fazer uma coisa e apenas 1 coisa...
	"Look at Listing 4-7 on page 71. Notice that the generatePrimes function is divided into sections such as declarations, initializations, and sieve. This is an obvious symptom of doing more than one thing. Functions that do one thing cannot be reasonably divided into sections."
	... OK DA PRÓXIMA VEZ Q FOR FAZER UM STRLEN VOU GARANTIR DE CRIAR UMA FUNÇÃO PRA INICIALIZAR O CONTADOR, OUTRA Q ANDA PELA STRING E DENTRO DELA UMA Q RETORNA O TAMANHO DA STRING ANDADA E QUANDO VOLTAR PRA STRLEN UMA Q RETORNA O AS OUTRAS RETORNAM.
	N é 100x melhor e mais otimizado do q só inicializar o contador, andar pela string e retornar o contador?
	
```Java
public Money calculatePay(Employee e)
throws InvalidEmployeeType {
	switch (e.type) {
		case COMMISSIONED:
			return calculateCommissionedPay(e);
		case HOURLY:
			return calculateHourlyPay(e);
		case SALARIED:
			return calculateSalariedPay(e);
 		default:
			throw new InvalidEmployeeType(e.type);
	}
}
```
Aparentemente essa função faz mais de 1 coisa...
	pelo q li (e olha q n sei nada de java) essa função calcula o pagamento de funcionario `e` com base em q tipo de funcionário ele é... se n for um tipo válido ele chama a função de tipo invalido... pra mim essa função parece perfeitamente simples e compreensível.
	
"Choosing good names for a function can go a long way toward explaining the intent of the function and the order and intent of the arguments. In the case of a monad, the function and argument should form a very nice verb/noun pair. For example, write(name) is very evocative. Whatever this 'name' thing is, it is being 'written.'"
	... COMO ASSIM "SEJA O Q NOME É, ESTÁ SENDO ESCRITO"? NOME É NOME! VOCÊ TÁ ESCREVENDO UM NOME AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA!!!!!111111
